# ezstream upstart script
description "start and stop ezstream source client"
version "0.1"
author "Chris Grimmett <chris@grimtech.net>"

# config
env RUNUSER=chris
env DAEMON=/opt/ezstream/start.sh
env LOGDIR=/tmp/ezstream

# restart if it dies
respawn
respawn limit 3 10

# start when filesystems and network device are up,
# stop when powering down or rebooting
start on (local-filesystems and net-device-up and desktop-start)
stop on runlevel [!2345]

pre-start script
  mkdir -p $LOGDIR
  chown $RUNUSER $LOGDIR
  su $RUNUSER -c "$DAEMON &"
end script

script
  getPid() {
    # sleep util process exists
    until pidof $1 >/dev/null; do
      sleep 1
    done
    echo $(pidof $1 | cut -d' ' -f1)
  }


  watchProcess() {
    while pidof $1 >/dev/null; do
      sleep 1
    done
  }

  # since start.sh forks 4 times, workaround the forking.
  # this is necessary because upstart can only track up to 2 forks.
  # since it forks >2 times, upstart thinks the service is exited.
  # what we do is we run start.sh in the upstart pre-start section
  # then we get the process id of the actual daemon, ezstream.
  # as long as ezstream is running, upstart will sleep and keep the service status as 'running'
  
  # get the pid of ezstream and save it
  echo "$(getPid 'ezstream')" > $LOGDIR/ezstream.pid
  
  # sleep as long as ezstream is running
  watchProcess 'ezstream'
end script

post-stop script
  if pidof 'ezstream'; then
    kill $(cat $LOGDIR/ezstream.pid)
  fi
  rm -f $LOGDIR/ezstream.pid
end script